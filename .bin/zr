#!/bin/bash

rid=-1
iid=-1
################################################################################
usage() {
  echo "Usage: zr <link <-r> [-i]|add|commit> [-g]"
  echo "  -r: review number."
  echo "  -i: issue number."
  echo "  -g: do a git rebase first."
  exit
}
################################################################################
commit() {
  commits_to_squash=`git changes | grep -i squash | wc -l`
  if [ $commits_to_squash != 0 ]; then
    echo "You have $commits_to_squash changes to squash before committing asshole:"
    git changes | grep -i squash
  else
    zreview commit --branch `git current-branch` -y 1
  fi
}
################################################################################
add() {
  zreview addEvidence --branch `git current-branch` -y 1 --repo ui.git
}
################################################################################
link() {
  if [ $rid == -1 ]; then
    usage
  fi

  if [ $iid == -1 ]; then
    #zreview link --branch `git current-branch` --upstream a/D10 -r zeph-r$rid -q [NONE]
    zreview link --branch `git current-branch` --upstream `git upstream | sed 's/origin\///'` -r zeph-r$rid -q [NONE] --repo ui.git
  else
    #zreview link --branch `git current-branch` --upstream a/D10 -r zeph-r$rid -q zeph-q$iid -e FINL
    zreview link --branch `git current-branch` --upstream `git upstream | sed 's/origin\///'` -r zeph-r$rid -q zeph-q$iid -e FINL --repo ui.git
  fi
}
################################################################################
git_rebase() {
  git fetch && git rebase `git upstream`
  if [ $? != 0  ]; then
    exit
  fi
}
################################################################################
case $1 in
  "link") ;;
  "add") ;;
  "commit") ;;
  *) usage;;
esac

function=$1
shift

while getopts "gr:i:" flag
do
  case $flag in
    g) git_rebase ;;
    r) rid=$OPTARG;;
    i) iid=$OPTARG;;
  esac
done

$function
