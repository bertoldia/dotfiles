#!/bin/bash

export DIST_PYTHON="/usr/bin/python2"

RUNNER_BIN="/home/runner/bin"
TMP_FILE="/tmp/queue-ls"
QUEUES="ctest rtest"
SHOW_MINE=false

################################################################################
usage() {
  echo "Usage: list-queues [-m] [queue(s)]"
  echo "  queue: the queue for which to show results: defaults to 'ctest rtest'"
  echo "  -m: only show systems where my jobs are queued."
  exit
}
################################################################################
function listMine {
  queue=$*
  systems=`$RUNNER_BIN/$queue | grep 'Systems:' | sed 's/Systems: //'`

  for s in $systems; do
    $RUNNER_BIN/$queue $s show > $TMP_FILE
    me=`grep $USER $TMP_FILE | wc -l`
    if [[ $me -gt 0 ]]; then
      echo "======================== $s =============================="
      grep "running\|stopped\|failed\|System\|${USER}\|\*\*" $TMP_FILE
    fi
  done
}
################################################################################
function listAll {
  queue=$*
  systems=`$RUNNER_BIN/$queue | grep 'Systems:' | sed 's/Systems: //'`

  for s in $systems; do
    $RUNNER_BIN/$queue $s show > $TMP_FILE
    echo "======================== $s =============================="
    grep '([0-9])\|running\|stopped\|failed\|System\|\*\*' $TMP_FILE
  done
}
################################################################################

while getopts "mh" flag
do
  case $flag in
    m) SHOW_MINE=true;;
    h) usage;;
  esac
done

if [ $SHOW_MINE == true ]; then
  shift
fi

if [ $# -ge 1 ]; then
  QUEUES=$*
fi

for q in $QUEUES; do
  echo "============================== $q ==============================="
  if [ $SHOW_MINE == true ]; then
    listMine $q
  else
    listAll $q
  fi
done

rm $TMP_FILE
