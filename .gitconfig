[user]
	name = Axel von Bertoldi
	email = bertoldia@gmail.com
[color]
  ui = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
  whitespace = red reverse
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[core]
  editor = nvim
  whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
  pager = diff-so-fancy | less --tabs=4 -RFX
[branch]
  autosetupmerge = always
[rebase]
  autosquash = true
[diff]
  ;tool = meld
  indentHeuristic = true
[push]
  default = tracking
[pull]
  rebase = true
[fetch]
  prune = true
[log]
  decorate = short
[alias]
  ; shortcuts
  co = checkout
  ci = commit
  br = branch
  rb = rebase
  st = status
  ss = status -uno
  cp = cherry-pick
  ; log display
  graph = log --oneline --graph --topo-order
  lg = log --color --graph --topo-order --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  all-my-commits = log --oneline --author='Axel von Bertoldi'
  ; branch manipulation
  new-branch = !sh -c 'git co -b abertoldi/$1 origin/master' -
  push-branch = !git push origin `git current-branch`:`git current-branch` -f
  push-branch-and-reupstream = !git push origin `git current-branch` && git br --set-upstream `git current-branch` origin/`git current-branch`
  diff-master = diff --name-only origin/master
  delete-branch = !sh -c 'git push origin :$1' -
  rebase-branch = !git rebase --interactive HEAD~`git changes | wc -l`
  rebase-branch-to-upstream = !git rebase --interactive `git upstream`
  change-upstream = !sh -c 'git branch --set-upstream-to \"$@\"' -
  master-diff = diff --name-only origin/master
  ; goodies
  current-branch = rev-parse --abbrev-ref HEAD
  upstream = !git rev-parse --abbrev-ref `git current-branch`@{upstream}
  changes = !git log --oneline `git upstream`..HEAD
  files = !git diff --name-only `git upstream`
  my-branches = !git br -a | grep --color "bertoldi"
  fixup = !sh -c 'git commit -a -m \"fixup! $@\" && git rebase -i $@~1' -
  squash = !sh -c 'git commit -a -m \"squash! $@\" && git rebase -i $@~1' -
  mb = !sh -c 'git merge-base `git upstream` `git current-branch`' -
  branch-guilt = !sh -c 'git guilt `git mb`' -
  dirty = !sh -c 'git status -s --untracked-files=no' -
  ls-tracked = !sh -c 'git ls-tree -r `git current-branch` --name-only' -
