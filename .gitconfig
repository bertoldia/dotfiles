[user]
	name = Axel von Bertoldi
	email = bertoldia@gmail.com
[color]
  ui = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
  whitespace = red reverse
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[alias]
  co = checkout
  ci = commit
  br = branch
  stat = status
  cp = cherry-pick
  graph = log --oneline --graph
  new-branch = !sh -c 'git co -b z/bertoa/$1 origin/a/$2' -
  current-branch = !git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \\(.*\\)/\\1/'
  publish-branch = !git push origin `git current-branch` && git br --set-upstream `git current-branch` origin/`git current-branch`
  push-branch = !git push origin `git current-branch` -f
  upstream = !git branch --no-color -vv 2> /dev/null | sed -e '/^[^*]/d' -e 's/.*[0-9a-z]\\{7,7\\} \\[//' -e 's/:.*//' -e 's/\\].*//'
  changes = !git log --oneline `git upstream`..HEAD
  my-branches = !git br -a | grep --color bertoa
  rebase-changeset = !git rebase --interactive HEAD~`git changes | wc -l`
  fixup = !sh -c 'git commit -a -m \"fixup! $@\" && git rebase-changeset' -
  squash = !sh -c 'git commit -a -m \"squash! $@\" && git rebase-changeset' -
  maint = !git fetch && git remote prune origin && git prune && git gc && git fsck
  change-upstream = !sh -c 'git branch --set-upstream `git current-branch` \"$@\"' -
  my-commits = log --oneline --author='Axel von Bertoldi'
[core]
  editor = vim
  whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
[branch]
  autosetupmerge = true
  autosetuprebase = always
[rebase]
  autosquash = yes
[diff]
  tool = meld
[push]
  default = tracking
